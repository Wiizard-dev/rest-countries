{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pierre\\\\Desktop\\\\rest-countries\\\\src\\\\components\\\\Country.js\";\nimport { Component, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Country extends Component {\n  constructor(props) {\n    super(props);\n    this.setState({\n      borderContent: [],\n      ErrorOfData: false\n    });\n  }\n\n  async getBorderFromAPI(arg) {\n    let url = `https://restcountries.eu/rest/v2/name/${arg}`;\n    fetch(url).then(resp => {\n      if (resp.status === 404) {\n        return '';\n      } else {\n        return resp.json();\n      }\n    }).then(data => {\n      if (data) {\n        data.map(({\n          alpha3Code,\n          name\n        }) => {\n          if (alpha3Code === arg) {\n            var container = borderContent;\n            container.push(name);\n            this.setState({\n              borderContent: container\n            });\n            console.log(borderContent);\n          }\n        });\n      }\n    }).catch(err => {\n      console.log(`Error with ${arg}`);\n    });\n  }\n\n  render() {\n    const data = this.props.data;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-button-container\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-arrow-left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), \"Home\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country__flag\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: data.flag,\n            className: \"country__flag__pic\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"country__title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"country__data\",\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"country__stats\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"country__stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Native Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 37\n                }, this), data.nativeName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"country__stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Population\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this), data.population]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"country__stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Region\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 37\n                }, this), data.region]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"country__stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Sub Region\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 37\n                }, this), data.subregion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"country__stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Capital\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this), data.capital]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"country__stats\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"country__stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Top Level Domain\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 37\n                }, this), data.topLevelDomain]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"country__stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: data.currencies.length > 1 ? 'Currencies' : 'Currency'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this), data.currencies.map(currency => {\n                  return currency.name;\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"country__stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: data.languages.length > 1 ? 'Languages' : 'Language'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this), data.languages.map(language => {\n                  return language.name;\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), data.borders.map(border => {\n            getBorderFromAPI(border);\n          }), this.state.borderContent ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"country__border\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Border Countries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"country__border_list\",\n              children: this.state.borderContent.map(data => {\n                return 'test';\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 33\n          }, this) : ErrorOfData ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"borders are loading\"\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Country;","map":{"version":3,"sources":["C:/Users/Pierre/Desktop/rest-countries/src/components/Country.js"],"names":["Component","useEffect","useState","Link","Country","constructor","props","setState","borderContent","ErrorOfData","getBorderFromAPI","arg","url","fetch","then","resp","status","json","data","map","alpha3Code","name","container","push","console","log","catch","err","render","flag","nativeName","population","region","subregion","capital","topLevelDomain","currencies","length","currency","languages","language","borders","border","state"],"mappings":"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","sourcesContent":["import { Component, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Country extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.setState({\r\n            borderContent: [],\r\n            ErrorOfData: false\r\n        })\r\n    }\r\n\r\n    async getBorderFromAPI (arg) {\r\n        let url = `https://restcountries.eu/rest/v2/name/${arg}`;\r\n        fetch(url)\r\n          .then(resp => {\r\n              if(resp.status === 404) {\r\n                return ''\r\n              } else {\r\n                  return resp.json();\r\n              }\r\n          })\r\n          .then(data => {\r\n            if(data) {\r\n                data.map(({alpha3Code, name }) => {\r\n                    if(alpha3Code === arg) {\r\n                        var container = borderContent;\r\n                        container.push(name);\r\n                        this.setState({\r\n                            borderContent: container\r\n                        })\r\n                        console.log(borderContent);\r\n                    }\r\n                })\r\n            }\r\n          })\r\n          .catch(err => {\r\n              console.log(`Error with ${arg}`);\r\n          })\r\n    }\r\n\r\n    render() {\r\n\r\n        const data = this.props.data;\r\n\r\n        return (\r\n            <>\r\n                <div className='home-button-container'>\r\n                    <Link to='/'>\r\n                        <i className=\"fas fa-arrow-left\"></i>\r\n                        Home\r\n                    </Link>\r\n                </div>\r\n                <div className='country'>\r\n                    <div className='country__flag'>\r\n                        <img src={data.flag} className='country__flag__pic' alt=''/>\r\n                    </div>\r\n                    <div className='country__info'>\r\n                        <h3 className='country__title'></h3>\r\n                        <div className='country__data'>\r\n                            <ul className='country__stats'>\r\n                                <li className='country__stat'>\r\n                                    <span>Native Name</span>{data.nativeName}\r\n                                </li>\r\n                                <li className='country__stat'>\r\n                                    <span>Population</span>{data.population}\r\n                                </li>\r\n                                <li className='country__stat'>\r\n                                    <span>Region</span>{data.region}\r\n                                </li>\r\n                                <li className='country__stat'>\r\n                                    <span>Sub Region</span>{data.subregion}\r\n                                </li>\r\n                                <li className='country__stat'>\r\n                                    <span>Capital</span>{data.capital}\r\n                                </li>\r\n                            </ul>\r\n                            <ul className='country__stats'>\r\n                                <li className='country__stat'>\r\n                                    <span>Top Level Domain</span>\r\n                                    {\r\n                                        data.topLevelDomain\r\n                                    }\r\n                                </li>\r\n                                <li className='country__stat'>\r\n                                    <span>\r\n                                        {\r\n                                            data.currencies.length > 1 ? 'Currencies' : 'Currency'\r\n                                        }\r\n                                    </span>\r\n                                    {\r\n                                        data.currencies.map(currency => {\r\n                                            return currency.name\r\n                                        })\r\n                                    }\r\n                                </li>\r\n                                <li className='country__stat'>\r\n                                    <span>\r\n                                        {\r\n                                            data.languages.length > 1 ? 'Languages' : 'Language'\r\n                                        }\r\n                                    </span>\r\n                                    {\r\n                                        data.languages.map(language => {\r\n                                            return language.name\r\n                                        })\r\n                                    }\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        {\r\n                            data.borders.map(border => {\r\n                                getBorderFromAPI(border);\r\n                            })\r\n                        }\r\n                        {\r\n                            this.state.borderContent ? (\r\n                                <div className='country__border'>\r\n                                    <h3>Border Countries</h3>\r\n                                        <ul className='country__border_list'>\r\n                                            {\r\n                                                this.state.borderContent.map(data => {\r\n                                                    return 'test';                                                \r\n                                                })\r\n                                            }\r\n                                        </ul>\r\n                                </div>\r\n                            ) : ErrorOfData ? (\r\n                                <p>Error</p>\r\n                            ) : (\r\n                                <>\r\n                                    borders are loading\r\n                                </>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Country;"]},"metadata":{},"sourceType":"module"}