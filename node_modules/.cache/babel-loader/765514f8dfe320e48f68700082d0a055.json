{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pierre\\\\Desktop\\\\rest-countries\\\\src\\\\components\\\\Country.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Country = ({\n  data\n}) => {\n  _s();\n\n  const [borderContent, setBorderContent] = useState([]);\n  const [ErrorOfData, setErrorOfData] = useState(false);\n  useEffect(() => {\n    setInterval(() => {\n      console.log(borderContent);\n    }, 500);\n  });\n\n  const getBorderFromAPI = async arg => {\n    let url = `https://restcountries.eu/rest/v2/name/${arg}`;\n    fetch(url).then(resp => {\n      if (resp.status === 404) {\n        return '';\n      } else {\n        return resp.json();\n      }\n    }).then(data => {\n      if (data) {\n        data.map(({\n          alpha3Code,\n          name\n        }) => {\n          if (alpha3Code === arg) {\n            const result = {\n              name: name,\n              alpha3Code: alpha3Code\n            };\n            console.log(result);\n            const toSend = borderContent + result;\n            console.log(toSend);\n          }\n        });\n      }\n    }).catch(err => {\n      console.log(`Error with ${arg}`);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-button-container\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-arrow-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), \"Home\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country__flag\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: data.flag,\n          className: \"country__flag__pic\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"country__title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country__data\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"country__stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"country__stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Native Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), data.nativeName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"country__stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Population\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this), data.population]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"country__stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Region\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this), data.region]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"country__stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Sub Region\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), data.subregion]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"country__stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Capital\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this), data.capital]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"country__stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"country__stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Top Level Domain\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), data.topLevelDomain]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"country__stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: data.currencies.length > 1 ? 'Currencies' : 'Currency'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), data.currencies.map(currency => {\n                return currency.name;\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"country__stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: data.languages.length > 1 ? 'Languages' : 'Language'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), data.languages.map(language => {\n                return language.name;\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), data.borders.map(border => {\n          getBorderFromAPI(border);\n        }), borderContent !== [] ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country__border\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Border Countries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"country__border_list\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"country__border__child\",\n              children: \"hey\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this) : ErrorOfData ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"borders are loading\"\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Country, \"NouXXCYZ7ArBXLpCMR3MXsNxIwo=\");\n\n_c = Country;\nexport default Country;\n\nvar _c;\n\n$RefreshReg$(_c, \"Country\");","map":{"version":3,"sources":["C:/Users/Pierre/Desktop/rest-countries/src/components/Country.js"],"names":["useEffect","useState","Link","Country","data","borderContent","setBorderContent","ErrorOfData","setErrorOfData","setInterval","console","log","getBorderFromAPI","arg","url","fetch","then","resp","status","json","map","alpha3Code","name","result","toSend","catch","err","flag","nativeName","population","region","subregion","capital","topLevelDomain","currencies","length","currency","languages","language","borders","border"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAExB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW,CAAC,MAAM;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ;AACF,KAFU,EAER,GAFQ,CAAX;AAGH,GAJQ,CAAT;;AAMA,QAAMO,gBAAgB,GAAG,MAAOC,GAAP,IAAe;AACpC,QAAIC,GAAG,GAAI,yCAAwCD,GAAI,EAAvD;AACAE,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,IAAI,IAAI;AACV,UAAGA,IAAI,CAACC,MAAL,KAAgB,GAAnB,EAAwB;AACtB,eAAO,EAAP;AACD,OAFD,MAEO;AACH,eAAOD,IAAI,CAACE,IAAL,EAAP;AACH;AACJ,KAPH,EAQGH,IARH,CAQQZ,IAAI,IAAI;AACZ,UAAGA,IAAH,EAAS;AACLA,QAAAA,IAAI,CAACgB,GAAL,CAAS,CAAC;AAACC,UAAAA,UAAD;AAAaC,UAAAA;AAAb,SAAD,KAAyB;AAC9B,cAAGD,UAAU,KAAKR,GAAlB,EAAuB;AACnB,kBAAMU,MAAM,GAAG;AACXD,cAAAA,IAAI,EAAEA,IADK;AAEXD,cAAAA,UAAU,EAAEA;AAFD,aAAf;AAIAX,YAAAA,OAAO,CAACC,GAAR,CAAYY,MAAZ;AACA,kBAAMC,MAAM,GAAGnB,aAAa,GAAGkB,MAA/B;AACAb,YAAAA,OAAO,CAACC,GAAR,CAAYa,MAAZ;AACH;AACJ,SAVD;AAWH;AACF,KAtBH,EAuBGC,KAvBH,CAuBSC,GAAG,IAAI;AACVhB,MAAAA,OAAO,CAACC,GAAR,CAAa,cAAaE,GAAI,EAA9B;AACH,KAzBH;AA0BH,GA5BD;;AA8BA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACI;AAAK,UAAA,GAAG,EAAET,IAAI,CAACuB,IAAf;AAAqB,UAAA,SAAS,EAAC,oBAA/B;AAAoD,UAAA,GAAG,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,gBAAd;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,eAAd;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAC6BvB,IAAI,CAACwB,UADlC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAI,cAAA,SAAS,EAAC,eAAd;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAC4BxB,IAAI,CAACyB,UADjC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAOI;AAAI,cAAA,SAAS,EAAC,eAAd;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EACwBzB,IAAI,CAAC0B,MAD7B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAUI;AAAI,cAAA,SAAS,EAAC,eAAd;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAC4B1B,IAAI,CAAC2B,SADjC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAaI;AAAI,cAAA,SAAS,EAAC,eAAd;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EACyB3B,IAAI,CAAC4B,OAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAkBI;AAAI,YAAA,SAAS,EAAC,gBAAd;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,eAAd;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAGQ5B,IAAI,CAAC6B,cAHb;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAOI;AAAI,cAAA,SAAS,EAAC,eAAd;AAAA,sCACI;AAAA,0BAEQ7B,IAAI,CAAC8B,UAAL,CAAgBC,MAAhB,GAAyB,CAAzB,GAA6B,YAA7B,GAA4C;AAFpD;AAAA;AAAA;AAAA;AAAA,sBADJ,EAOQ/B,IAAI,CAAC8B,UAAL,CAAgBd,GAAhB,CAAoBgB,QAAQ,IAAI;AAC5B,uBAAOA,QAAQ,CAACd,IAAhB;AACH,eAFD,CAPR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAmBI;AAAI,cAAA,SAAS,EAAC,eAAd;AAAA,sCACI;AAAA,0BAEQlB,IAAI,CAACiC,SAAL,CAAeF,MAAf,GAAwB,CAAxB,GAA4B,WAA5B,GAA0C;AAFlD;AAAA;AAAA;AAAA;AAAA,sBADJ,EAOQ/B,IAAI,CAACiC,SAAL,CAAejB,GAAf,CAAmBkB,QAAQ,IAAI;AAC3B,uBAAOA,QAAQ,CAAChB,IAAhB;AACH,eAFD,CAPR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAsDQlB,IAAI,CAACmC,OAAL,CAAanB,GAAb,CAAiBoB,MAAM,IAAI;AACvB5B,UAAAA,gBAAgB,CAAC4B,MAAD,CAAhB;AACH,SAFD,CAtDR,EA2DQnC,aAAa,KAAK,EAAlB,gBACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEQ;AAAI,YAAA,SAAS,EAAC,sBAAd;AAAA,mCACI;AAAI,cAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,GASIE,WAAW,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADW,gBAGX;AAAA;AAAA,yBAvEZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AA6FH,CAtID;;GAAMJ,O;;KAAAA,O;AAwIN,eAAeA,OAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Country = ({data}) => {\r\n\r\n    const [borderContent, setBorderContent] = useState([]);\r\n    const [ErrorOfData, setErrorOfData] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n           console.log(borderContent); \r\n        }, 500);\r\n    });\r\n\r\n    const getBorderFromAPI = async (arg) => {\r\n        let url = `https://restcountries.eu/rest/v2/name/${arg}`;\r\n        fetch(url)\r\n          .then(resp => {\r\n              if(resp.status === 404) {\r\n                return ''\r\n              } else {\r\n                  return resp.json();\r\n              }\r\n          })\r\n          .then(data => {\r\n            if(data) {\r\n                data.map(({alpha3Code, name }) => {\r\n                    if(alpha3Code === arg) {\r\n                        const result = {\r\n                            name: name,\r\n                            alpha3Code: alpha3Code\r\n                        }\r\n                        console.log(result);\r\n                        const toSend = borderContent + result\r\n                        console.log(toSend);\r\n                    }\r\n                })\r\n            }\r\n          })\r\n          .catch(err => {\r\n              console.log(`Error with ${arg}`);\r\n          })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='home-button-container'>\r\n                <Link to='/'>\r\n                    <i className=\"fas fa-arrow-left\"></i>\r\n                    Home\r\n                </Link>\r\n            </div>\r\n            <div className='country'>\r\n                <div className='country__flag'>\r\n                    <img src={data.flag} className='country__flag__pic' alt=''/>\r\n                </div>\r\n                <div className='country__info'>\r\n                    <h3 className='country__title'></h3>\r\n                    <div className='country__data'>\r\n                        <ul className='country__stats'>\r\n                            <li className='country__stat'>\r\n                                <span>Native Name</span>{data.nativeName}\r\n                            </li>\r\n                            <li className='country__stat'>\r\n                                <span>Population</span>{data.population}\r\n                            </li>\r\n                            <li className='country__stat'>\r\n                                <span>Region</span>{data.region}\r\n                            </li>\r\n                            <li className='country__stat'>\r\n                                <span>Sub Region</span>{data.subregion}\r\n                            </li>\r\n                            <li className='country__stat'>\r\n                                <span>Capital</span>{data.capital}\r\n                            </li>\r\n                        </ul>\r\n                        <ul className='country__stats'>\r\n                            <li className='country__stat'>\r\n                                <span>Top Level Domain</span>\r\n                                {\r\n                                    data.topLevelDomain\r\n                                }\r\n                            </li>\r\n                            <li className='country__stat'>\r\n                                <span>\r\n                                    {\r\n                                        data.currencies.length > 1 ? 'Currencies' : 'Currency'\r\n                                    }\r\n                                </span>\r\n                                {\r\n                                    data.currencies.map(currency => {\r\n                                        return currency.name\r\n                                    })\r\n                                }\r\n                            </li>\r\n                            <li className='country__stat'>\r\n                                <span>\r\n                                    {\r\n                                        data.languages.length > 1 ? 'Languages' : 'Language'\r\n                                    }\r\n                                </span>\r\n                                {\r\n                                    data.languages.map(language => {\r\n                                        return language.name\r\n                                    })\r\n                                }\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    {\r\n                        data.borders.map(border => {\r\n                            getBorderFromAPI(border);\r\n                        })\r\n                    }\r\n                    {\r\n                        borderContent !== [] ? (\r\n                            <div className='country__border'>\r\n                                <h3>Border Countries</h3>\r\n                                    <ul className='country__border_list'>\r\n                                        <li className='country__border__child'>\r\n                                            hey\r\n                                        </li>\r\n                                    </ul>\r\n                            </div>\r\n                        ) : ErrorOfData ? (\r\n                            <p>Error</p>\r\n                        ) : (\r\n                            <>\r\n                                borders are loading\r\n                                \r\n                            </>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Country;"]},"metadata":{},"sourceType":"module"}